# CI for Terragrunt: format, validate, tflint, checkov. Uses GitHub OIDC recommended.
name: terragrunt-ci

on:
  push:
    paths:
      - 'modules/**'
      - 'live/**'
      - '.github/workflows/**'
  pull_request:
    paths:
      - 'modules/**'
      - 'live/**'

jobs:
  checks:
    runs-on: ubuntu-latest
    permissions:
      id-token: write    # needed for OIDC
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials via OIDC (recommended)
        # This uses GitHub Actions OIDC to request temporary credentials
        # Replace role-to-assume with your IAM role ARN that trusts GitHub OIDC
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE_ARN }}    # stored in repo secrets; role must trust OIDC
          aws-region: us-east-1

      - name: Install tools (Terraform + Terragrunt + tflint + checkov)
        run: |
          set -euo pipefail
          # Install Terraform (pin via TF_VERSION env if needed)
          TF_VERSION=1.7.0
          curl -fsSL https://releases.hashicorp.com/terraform/${TF_VERSION}/terraform_${TF_VERSION}_linux_amd64.zip -o /tmp/terraform.zip
          sudo apt-get update -y && sudo apt-get install -y unzip
          unzip /tmp/terraform.zip -d /tmp
          sudo mv /tmp/terraform /usr/local/bin/terraform
          terraform version

          # Install Terragrunt (pin TG_VERSION env)
          TG_VERSION=0.53.0
          curl -fsSL https://github.com/gruntwork-io/terragrunt/releases/download/v${TG_VERSION}/terragrunt_linux_amd64 -o /usr/local/bin/terragrunt
          sudo chmod +x /usr/local/bin/terragrunt
          terragrunt --version

          # tflint
          curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
          tflint --version

          # checkov
          pip install --no-cache-dir checkov

      - name: terragrunt run-all validate
        run: |
          # Use terragrunt to run validation across live tree
          terragrunt run-all init        # initializes modules and backend (requires S3 backend exists)
          terragrunt run-all validate

      - name: Format & Lint
        run: |
          terragrunt run-all fmt -check
          terragrunt run-all plan -out=plan.out || true
          tflint --init
          terragrunt run-all tflint || true

      - name: Static security scan (checkov)
        run: |
          # Scan modules and live configs
          checkov -d modules || true